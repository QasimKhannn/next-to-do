// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model List {
  id          String   @id @default(cuid())
  name        String
  date        DateTime
  time        String?
  description String
  finished    Boolean? @default(false)
}

enum UserRole {
  SUPER_ADMIN
  BASIC
}

enum UserGender {
  MALE
  FEMALE
}

enum lang {
  URDU
  ENGLISH
}

enum QuestionLanguage {
  TEXT
  JSON
  HTML
  CSS
  JAVASCRIPT
  TYPESCRIPT
  JAVA
  C
  PHP
  REACT
  NODE
  PYTHON
}

enum QuestionDifficulty {
  BEGINNER
  INTERMEDIATE
  EXPERT
}

enum QuestionStatus {
  NOT_ATTEMPTED
  READY_TO_TEST
  TEST_1_COMPLETE
  TEST_2_COMPLETE
  TEST_3_COMPLETE
  TEST_4_COMPLETE
  TEST_5_COMPLETE
  PASS
  RE_TAKE
  FAIL
}

enum TestStatus {
  NOT_TAKEN
  PASS
  RE_TAKE
  FAIL
}

enum QuestionType {
  MULTIPLE_CHOICE
  CODING
  BOOLEAN
}

model Question {
  id            String             @id @default(uuid()) @map("id")
  correctAnswer Json
  codeSnippet   Json?
  lang          lang               @default(ENGLISH)
  difficulty    QuestionDifficulty @default(BEGINNER)
  questionText  String             @db.Text
  options       Json
  questionType  QuestionType       @default(MULTIPLE_CHOICE)
  optionsType   QuestionType       @default(MULTIPLE_CHOICE)
  language      QuestionLanguage   @default(TEXT)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model Recipients {
  id     String @id @default(cuid())
  name   String
  number String
}
